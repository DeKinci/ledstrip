<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Ducky led strip(tease)</title>
        <script
        src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.3.5/dist/alpine.min.js"
        defer
        ></script>
        <link rel="stylesheet" href="style.css" />
        <style type="text/css" media="screen">
            #editor { 
                /* position: relative; */
                /* top: 0;
                right: 0;
                bottom: 0;
                left: 0; */
                height: 300;
                width: 600;
            }
        </style>
    </head>
    <body>
        <div x-data="shaders()" x-init="listShaders()" class="app">
            <h1>Select mode</h1>
            <ul>
                <template x-for="shader in shaders" :key="shader.name">
                <li
                    @click="selectShader(shader)"
                    :class="{'completed': shader.selected}"
                >
                    <span x-text="shader.name" class="title"></span>
                    <span @click="deleteShader(shader.name)" class="delete-shader">&times;</span>
                </li>
                </template>
            </ul>
            <div class="add-shader">
                <input type="text" x-model="inputValue" placeholder="NewShader" />
                <button @click="addShader()">New</button>
            </div>
            <div>
                <div id="editor">
                    function foo(items) {
                        var x = "All this is syntax highlighted";
                        return x;
                    }
                </div>
            </div>
        </div>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js" type="text/javascript" charset="utf-8" crossorigin="anonymous"></script>
        <script>
            var editor = ace.edit("editor");
            editor.setTheme("ace/theme/monokai");
            editor.session.setMode("ace/mode/lua");
        </script>

        <script>
        function shaders() {
            return {
                shaders: [],
                currentShader: null,
                inputValue: "",
                selectShader: function(s) {
                    if (s === this.currentShader) {
                        return;
                    }
                    this.currentShader.selected = false;
                    this.currentShader = s;
                    this.currentShader.selected = true;
                    fetch("http://10.0.0.12/api/show/" + s.name)
                },
                addShader: function() {
                    if (!this.inputValue) {
                        return;
                    }

                    this.shaders.push({ name: this.inputValue, selected: false });
                    this.inputValue = "";
                },
                deleteShader: function(id) {
                    fetch("http://10.0.0.12/api/shader/" + id, {method: 'DELETE'})
                        .then(r => this.shaders = this.shaders.filter(shader => shader.name !== id))
                },
                listShaders: function() {
                    fetch("http://10.0.0.12/api/shader")
                    .then(response => response.json())
                    .then(data => {
                        this.shaders = data.shader.map(s => { return { name: s, selected: false } });
                        this.currentShader = this.shaders[0];
                        this.currentShader.selected = true;
                    });
                }
            };
        }
        </script>
    </body>
</html>
